{"version":3,"file":"index.umd.js","sources":["../../../../src/plugins/popoverController/index.ts"],"sourcesContent":["import {markRaw, type Plugin, ref, toRef, watch} from 'vue'\nimport {popoverPluginKey} from '../../utils/keys'\nimport type {\n  ControllerKey,\n  PopoverOrchestratorMapValue,\n  PopoverOrchestratorShowParam,\n  PrivateOrchestratedPopover,\n  PrivateOrchestratedTooltip,\n  TooltipOrchestratorMapValue,\n  TooltipOrchestratorShowParam,\n} from '../../types/ComponentOrchestratorTypes'\n\nexport const popoverPlugin: Plugin = {\n  install(app) {\n    const popovers = ref(new Map<ControllerKey, PopoverOrchestratorMapValue>())\n    /**\n     * @returns {ControllerKey} If `id` is passed to props, it will use that id, otherwise,\n     * a symbol will be created that corresponds to its unique id.\n     */\n    const popover = (obj: PopoverOrchestratorShowParam): ControllerKey => {\n      const resolvedProps = toRef(obj.props)\n      const reference = toRef(obj.target)\n\n      const _self = resolvedProps.value?.id || Symbol('Popover controller')\n\n      watch(\n        reference,\n        (newValue) => {\n          if (!newValue) {\n            popovers.value.delete(_self)\n          } else {\n            popovers.value.set(_self, {\n              component: !obj.component ? undefined : markRaw(obj.component),\n              props: {...resolvedProps.value, _target: newValue, _modelValue: false},\n            })\n          }\n        },\n        {immediate: true}\n      )\n\n      watch(resolvedProps, (newValue) => {\n        const previous = popovers.value.get(_self)\n        if (!previous) return\n        popovers.value.set(_self, {\n          component: !obj.component ? undefined : markRaw(obj.component),\n          props: {...previous.props, ...newValue},\n        })\n      })\n\n      return _self\n    }\n    /**\n     * @param {ControllerKey} self You can get the symbol param from the return value from the show method, or use props.id\n     */\n    const setPopover = (self: ControllerKey, val: Partial<PrivateOrchestratedPopover>) => {\n      const popover = popovers.value.get(self)\n      if (!popover?.props) return\n      popover.props = {\n        ...popover.props,\n        ...val,\n      }\n    }\n    /**\n     * @param {ControllerKey} self You can get the symbol param from the return value from the show method, or use props.id\n     */\n    const removePopover = (self: ControllerKey) => popovers.value.delete(self)\n\n    const tooltips = ref(new Map<ControllerKey, TooltipOrchestratorMapValue>())\n    /**\n     * @returns {ControllerKey} If `id` is passed to props, it will use that id, otherwise,\n     * a symbol will be created that corresponds to its unique id.\n     */\n    const tooltip = (obj: TooltipOrchestratorShowParam): ControllerKey => {\n      const resolvedProps = toRef(obj.props)\n      const reference = toRef(obj.target)\n\n      const _self = resolvedProps.value?.id || Symbol('Tooltip controller')\n\n      watch(\n        reference,\n        (newValue) => {\n          if (!newValue) {\n            tooltips.value.delete(_self)\n          } else {\n            tooltips.value.set(_self, {\n              component: !obj.component ? undefined : markRaw(obj.component),\n              props: {...resolvedProps.value, _modelValue: false, _target: newValue},\n            })\n          }\n        },\n        {\n          immediate: true,\n        }\n      )\n\n      watch(resolvedProps, (newValue) => {\n        const previous = tooltips.value.get(_self)\n        if (!previous) return\n        tooltips.value.set(_self, {\n          component: !obj.component ? undefined : markRaw(obj.component),\n          props: {...previous.props, ...newValue},\n        })\n      })\n\n      return _self\n    }\n    /**\n     * @param {ControllerKey} self You can get the symbol param from the return value from the show method, or use props.id\n     */\n    const setTooltip = (self: ControllerKey, val: Partial<PrivateOrchestratedTooltip>) => {\n      const tip = tooltips.value.get(self)\n      if (!tip?.props) return\n      tip.props = {\n        ...tip.props,\n        ...val,\n      }\n    }\n    /**\n     * @param {ControllerKey} self You can get the symbol param from the return value from the show method, or use props.id\n     */\n    const removeTooltip = (self: ControllerKey) => tooltips.value.delete(self)\n\n    app.provide(popoverPluginKey, {\n      popovers,\n      tooltips,\n      tooltip,\n      popover,\n      setPopover,\n      setTooltip,\n      removePopover,\n      removeTooltip,\n    })\n  },\n}\n"],"names":["popoverPlugin","install","app","popovers","ref","Map","tooltips","provide","popoverPluginKey","tooltip","obj","resolvedProps","toRef","props","reference","target","_self","_a","value","id","Symbol","vue","watch","newValue","set","component","markRaw","_modelValue","_target","delete","immediate","previous","get","popover","setPopover","self","val","setTooltip","tip","removePopover","removeTooltip"],"mappings":"8IAYaA,EAAwB,CACnC,OAAAC,CAAQC,GACN,MAAMC,EAAWC,EAAAA,IAAQ,IAAAC,KAqDnBC,EAAWF,EAAAA,IAAQ,IAAAC,KAuDrBH,EAAAK,QAAQC,mBAAkB,CAC5BL,WACAG,WACAG,QArDeC,UACT,MAAAC,EAAgBC,EAAAA,MAAMF,EAAIG,OAC1BC,EAAYF,EAAAA,MAAMF,EAAIK,QAEtBC,GAAQ,OAAAC,EAAcN,EAAAO,YAAO,EAAAD,EAAAE,KAAMC,OAAO,sBA4BzC,OA1BPC,EAAAC,MACER,GACCS,IACMA,EAGMjB,EAAAY,MAAMM,IAAIR,EAAO,CACxBS,UAAYf,EAAIe,UAAwBC,EAAAA,QAAQhB,EAAIe,gBAAxB,EAC5BZ,MAAO,IAAIF,EAAcO,MAAOS,aAAa,EAAOC,QAASL,KAJtDjB,EAAAY,MAAMW,OAAOb,EAMxB,GAEF,CACEc,WAAW,YAITnB,GAAgBY,IACpB,MAAMQ,EAAWzB,EAASY,MAAMc,IAAIhB,GAC/Be,GACIzB,EAAAY,MAAMM,IAAIR,EAAO,CACxBS,UAAYf,EAAIe,UAAwBC,EAAAA,QAAQhB,EAAIe,gBAAxB,EAC5BZ,MAAO,IAAIkB,EAASlB,SAAUU,IAC/B,IAGIP,CAAA,EAsBPiB,QA3GevB,UACT,MAAAC,EAAgBC,EAAAA,MAAMF,EAAIG,OAC1BC,EAAYF,EAAAA,MAAMF,EAAIK,QAEtBC,GAAQ,OAAAC,EAAcN,EAAAO,YAAO,EAAAD,EAAAE,KAAMC,OAAO,sBA0BzC,OAxBPC,EAAAC,MACER,GACCS,IACMA,EAGMpB,EAAAe,MAAMM,IAAIR,EAAO,CACxBS,UAAYf,EAAIe,UAAwBC,EAAAA,QAAQhB,EAAIe,gBAAxB,EAC5BZ,MAAO,IAAIF,EAAcO,MAAOU,QAASL,EAAUI,aAAa,KAJzDxB,EAAAe,MAAMW,OAAOb,EAMxB,GAEF,CAACc,WAAW,YAGRnB,GAAgBY,IACpB,MAAMQ,EAAW5B,EAASe,MAAMc,IAAIhB,GAC/Be,GACI5B,EAAAe,MAAMM,IAAIR,EAAO,CACxBS,UAAYf,EAAIe,UAAwBC,EAAAA,QAAQhB,EAAIe,gBAAxB,EAC5BZ,MAAO,IAAIkB,EAASlB,SAAUU,IAC/B,IAGIP,CAAA,EA8EPkB,WAzEiB,CAACC,EAAqBC,KACvC,MAAMH,EAAU9B,EAASe,MAAMc,IAAIG,UAC9BF,WAASpB,SACdoB,EAAQpB,MAAQ,IACXoB,EAAQpB,SACRuB,GAAA,EAqELC,WAnBiB,CAACF,EAAqBC,KACvC,MAAME,EAAMhC,EAASY,MAAMc,IAAIG,UAC1BG,WAAKzB,SACVyB,EAAIzB,MAAQ,IACPyB,EAAIzB,SACJuB,GAAA,EAeLG,cAhEqBJ,GAAwBhC,EAASe,MAAMW,OAAOM,GAiEnEK,cAVqBL,GAAwB7B,EAASY,MAAMW,OAAOM,IAYvE"}