declare const _default: import('vue').DefineComponent<{}, {
    popovers?: import('vue').Ref<Map<import('../..').ControllerKey, import('../..').PopoverOrchestratorMapValue>, Map<import('../..').ControllerKey, import('../..').PopoverOrchestratorMapValue>> | undefined;
    popover?: ((obj: import('../..').PopoverOrchestratorShowParam) => import('../..').ControllerKey) | undefined;
    setPopover?: ((self: import('../..').ControllerKey, val: Partial<import('../..').PrivateOrchestratedPopover>) => void) | undefined;
    removePopover?: ((self: import('../..').ControllerKey) => void) | undefined;
    tooltips?: import('vue').Ref<Map<import('../..').ControllerKey, import('../..').TooltipOrchestratorMapValue>, Map<import('../..').ControllerKey, import('../..').TooltipOrchestratorMapValue>> | undefined;
    tooltip?: ((obj: import('../..').TooltipOrchestratorShowParam) => import('../..').ControllerKey) | undefined;
    setTooltip?: ((self: import('../..').ControllerKey, val: Partial<import('../..').PrivateOrchestratedTooltip>) => void) | undefined;
    removeTooltip?: ((self: import('../..').ControllerKey) => void) | undefined;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;
