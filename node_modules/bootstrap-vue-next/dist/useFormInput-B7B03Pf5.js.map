{"version":3,"file":"useFormInput-B7B03Pf5.js","sources":["../src/utils/normalizeInput.ts","../src/composables/useFormInput.ts"],"sourcesContent":["import type {Numberish} from '../types/CommonTypes'\n\nexport const normalizeInput = (\n  v: Numberish | null,\n  modelModifiers: Record<'number' | 'lazy' | 'trim', true | undefined>\n) => {\n  if (v === null) return\n  let update = v\n  if (modelModifiers.number && typeof update === 'string' && update !== '') {\n    const parsed = Number.parseFloat(update)\n    update = Number.isNaN(parsed) ? update : parsed\n  }\n  return update\n}\n","import type {Numberish} from '../types/CommonTypes'\nimport {nextTick, onActivated, onMounted, ref, type Ref} from 'vue'\nimport {useAriaInvalid} from './useAriaInvalid'\nimport {useId} from './useId'\nimport {useDebounceFn, useFocus, useToNumber} from '@vueuse/core'\nimport type {CommonInputProps} from '../types/FormCommonInputProps'\n\nexport const useFormInput = (\n  props: Readonly<CommonInputProps>,\n  modelValue: Ref<Numberish | null>,\n  modelModifiers: Record<'number' | 'lazy' | 'trim', true | undefined>\n) => {\n  const input = ref<HTMLInputElement | null>(null)\n  const forceUpdateKey = ref(0)\n\n  const computedId = useId(() => props.id, 'input')\n  const debounceNumber = useToNumber(() => props.debounce ?? 0)\n  const debounceMaxWaitNumber = useToNumber(() => props.debounceMaxWait ?? NaN)\n\n  const internalUpdateModelValue = useDebounceFn(\n    (value: Numberish) => {\n      modelValue.value = value\n    },\n    () => (modelModifiers.lazy === true ? 0 : debounceNumber.value),\n    {maxWait: () => (modelModifiers.lazy === true ? NaN : debounceMaxWaitNumber.value)}\n  )\n\n  const updateModelValue = (value: Numberish, force = false) => {\n    if (modelModifiers.lazy === true && force === false) return\n    internalUpdateModelValue(value)\n  }\n\n  const {focused} = useFocus(input, {\n    initialValue: props.autofocus,\n  })\n\n  const _formatValue = (value: string, evt: Readonly<Event>, force = false) => {\n    if (props.formatter !== undefined && (!props.lazyFormatter || force)) {\n      return props.formatter(value, evt)\n    }\n    return value\n  }\n  onMounted(() => {\n    if (input.value) {\n      input.value.value = modelValue.value?.toString() ?? ''\n    }\n  })\n\n  onActivated(() => {\n    nextTick(() => {\n      if (props.autofocus) {\n        focused.value = true\n      }\n    })\n  })\n\n  const computedAriaInvalid = useAriaInvalid(\n    () => props.ariaInvalid,\n    () => props.state\n  )\n\n  const onInput = (evt: Readonly<Event>) => {\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt)\n    if (evt.defaultPrevented) {\n      evt.preventDefault()\n      return\n    }\n\n    const nextModel = formattedValue\n\n    updateModelValue(nextModel)\n  }\n\n  const onChange = (evt: Readonly<Event>) => {\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt)\n    if (evt.defaultPrevented) {\n      evt.preventDefault()\n      return\n    }\n\n    const nextModel = formattedValue\n    if (modelValue.value !== nextModel) {\n      updateModelValue(formattedValue, true)\n    }\n  }\n\n  const onBlur = (evt: Readonly<FocusEvent>) => {\n    if (!modelModifiers.lazy && !props.lazyFormatter && !modelModifiers.trim) return\n\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt, true)\n\n    const nextModel = modelModifiers.trim ? formattedValue.trim() : formattedValue\n    const needsForceUpdate = nextModel.length !== formattedValue.length\n    if (modelValue.value !== nextModel) {\n      updateModelValue(formattedValue, true)\n    }\n    if (modelModifiers.trim && needsForceUpdate) {\n      // The value is trimmed but there would still exist some white space\n      // So, force update the value. You need to bind this to :key on the input element\n      forceUpdateKey.value = forceUpdateKey.value + 1\n    }\n  }\n\n  const focus = () => {\n    if (!props.disabled) {\n      focused.value = true\n    }\n  }\n\n  const blur = () => {\n    if (!props.disabled) {\n      focused.value = false\n    }\n  }\n\n  return {\n    input,\n    computedId,\n    computedAriaInvalid,\n    onInput,\n    onChange,\n    onBlur,\n    focus,\n    blur,\n    forceUpdateKey,\n  }\n}\n"],"names":["v","modelModifiers","update","number","parsed","Number","parseFloat","isNaN","props","modelValue","input","ref","forceUpdateKey","computedId","useId","id","debounceNumber","useToNumber","debounce","debounceMaxWaitNumber","debounceMaxWait","NaN","internalUpdateModelValue","useDebounceFn","value","lazy","maxWait","updateModelValue","force","focused","useFocus","initialValue","autofocus","_formatValue","evt","formatter","lazyFormatter","onMounted","_a","toString","onActivated","nextTick","computedAriaInvalid","useAriaInvalid","ariaInvalid","state","onInput","target","formattedValue","defaultPrevented","preventDefault","onChange","nextModel","onBlur","trim","needsForceUpdate","length","focus","disabled","blur"],"mappings":"wMAE8B,CAC5BA,EACAC,KAEA,GAAU,OAAND,EAAY,OAChB,IAAIE,EAASF,EACb,GAAIC,EAAeE,QAA4B,iBAAXD,GAAkC,KAAXA,EAAe,CAClE,MAAAE,EAASC,OAAOC,WAAWJ,GACjCA,EAASG,OAAOE,MAAMH,GAAUF,EAASE,CAC3C,CACO,OAAAF,CAAA,uBCLmB,CAC1BM,EACAC,EACAR,KAEM,MAAAS,EAAQC,MAA6B,MACrCC,EAAiBD,MAAI,GAErBE,EAAaC,EAAAA,OAAM,IAAMN,EAAMO,IAAI,SACnCC,EAAiBC,EAAAA,aAAY,IAAMT,EAAMU,UAAY,IACrDC,EAAwBF,EAAAA,aAAY,IAAMT,EAAMY,iBAAmBC,MAEnEC,EAA2BC,EAAAA,eAC9BC,IACCf,EAAWe,MAAQA,CAAA,IAErB,KAA+B,IAAxBvB,EAAewB,KAAgB,EAAIT,EAAeQ,OACzD,CAACE,QAAS,KAA+B,IAAxBzB,EAAewB,KAAgBJ,IAAMF,EAAsBK,QAGxEG,EAAmB,CAACH,EAAkBI,GAAQ,MACtB,IAAxB3B,EAAewB,OAA2B,IAAVG,GACpCN,EAAyBE,EAAK,GAG1BK,QAACA,GAAWC,EAAAA,SAASpB,EAAO,CAChCqB,aAAcvB,EAAMwB,YAGhBC,EAAe,CAACT,EAAeU,EAAsBN,GAAQ,SACzC,IAApBpB,EAAM2B,WAA6B3B,EAAM4B,gBAAiBR,EAGvDJ,EAFEhB,EAAM2B,UAAUX,EAAOU,GAIlCG,EAAAA,WAAU,WACJ3B,EAAMc,QACRd,EAAMc,MAAMA,OAAQ,OAAAc,EAAW7B,EAAAe,gBAAOe,aAAc,GACtD,IAGFC,EAAAA,aAAY,KACVC,EAAAA,UAAS,KACHjC,EAAMwB,YACRH,EAAQL,OAAQ,EAClB,GACD,IAGH,MAAMkB,EAAsBC,EAAAA,gBAC1B,IAAMnC,EAAMoC,cACZ,IAAMpC,EAAMqC,QA4DP,MAAA,CACLnC,QACAG,aACA6B,sBACAI,QA7DeZ,IACT,MAAAV,MAACA,GAASU,EAAIa,OACdC,EAAiBf,EAAaT,EAAOU,GAC3C,GAAIA,EAAIe,iBAEN,YADAf,EAAIgB,iBAMNvB,EAFkBqB,EAEQ,EAoD1BG,SAjDgBjB,IACV,MAAAV,MAACA,GAASU,EAAIa,OACdC,EAAiBf,EAAaT,EAAOU,GAC3C,GAAIA,EAAIe,iBAEN,YADAf,EAAIgB,iBAIN,MAAME,EAAYJ,EACdvC,EAAWe,QAAU4B,GACvBzB,EAAiBqB,GAAgB,EACnC,EAuCAK,OApCcnB,IACV,IAACjC,EAAewB,OAASjB,EAAM4B,gBAAkBnC,EAAeqD,KAAM,OAEpE,MAAA9B,MAACA,GAASU,EAAIa,OACdC,EAAiBf,EAAaT,EAAOU,GAAK,GAE1CkB,EAAYnD,EAAeqD,KAAON,EAAeM,OAASN,EAC1DO,EAAmBH,EAAUI,SAAWR,EAAeQ,OACzD/C,EAAWe,QAAU4B,GACvBzB,EAAiBqB,GAAgB,GAE/B/C,EAAeqD,MAAQC,IAGV3C,EAAAY,MAAQZ,EAAeY,MAAQ,EAChD,EAsBAiC,MAnBY,KACPjD,EAAMkD,WACT7B,EAAQL,OAAQ,EAClB,EAiBAmC,KAdW,KACNnD,EAAMkD,WACT7B,EAAQL,OAAQ,EAClB,EAYAZ,iBAAA"}