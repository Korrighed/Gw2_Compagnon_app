{"version":3,"file":"BDropdown.vue_vue_type_script_setup_true_lang-BK6sfMpo.js","sources":["../src/components/BDropdown/BDropdown.vue"],"sourcesContent":["<template>\n  <ConditionalWrapper\n    ref=\"wrapper\"\n    :skip=\"inInputGroup || props.skipWrapper\"\n    :class=\"computedClasses\"\n    :role=\"inButtonGroupAttributes?.role\"\n  >\n    <BButton\n      :id=\"computedId\"\n      ref=\"splitButton\"\n      :variant=\"props.splitVariant || props.variant\"\n      :size=\"props.size\"\n      :class=\"buttonClasses\"\n      :disabled=\"props.splitDisabled || props.disabled\"\n      :type=\"props.splitButtonType\"\n      :aria-label=\"props.ariaLabel\"\n      :aria-expanded=\"props.split ? undefined : modelValue\"\n      :aria-haspopup=\"props.split ? undefined : 'menu'\"\n      :href=\"props.split ? props.splitHref : undefined\"\n      :to=\"props.split && props.splitTo ? props.splitTo : undefined\"\n      @click=\"onSplitClick\"\n    >\n      <slot name=\"button-content\">\n        {{ props.text }}\n      </slot>\n    </BButton>\n    <BButton\n      v-if=\"props.split\"\n      ref=\"button\"\n      :variant=\"props.variant\"\n      :size=\"props.size\"\n      :disabled=\"props.disabled\"\n      :class=\"[props.toggleClass, {show: modelValue}]\"\n      class=\"dropdown-toggle-split dropdown-toggle\"\n      :aria-expanded=\"modelValue\"\n      aria-haspopup=\"menu\"\n      @click=\"onButtonClick\"\n    >\n      <span class=\"visually-hidden\">\n        <slot name=\"toggle-text\">\n          {{ props.toggleText }}\n        </slot>\n      </span>\n    </BButton>\n    <ConditionalTeleport\n      :to=\"props.teleportTo\"\n      :disabled=\"!props.teleportTo || props.teleportDisabled\"\n    >\n      <ul\n        v-if=\"!props.lazy || modelValue\"\n        v-show=\"props.lazy || modelValue\"\n        ref=\"floating\"\n        :style=\"[floatingStyles, sizeStyles]\"\n        class=\"dropdown-menu overflow-auto\"\n        :class=\"[props.menuClass, {show: modelValue}]\"\n        :aria-labelledby=\"computedId\"\n        :role=\"props.role\"\n        @click=\"onClickInside\"\n      >\n        <slot :hide=\"hide\" :show=\"show\" />\n      </ul>\n    </ConditionalTeleport>\n  </ConditionalWrapper>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  autoUpdate,\n  type Boundary,\n  flip,\n  type Middleware,\n  offset as offsetMiddleware,\n  type RootBoundary,\n  shift,\n  size as sizeMiddleware,\n  useFloating,\n} from '@floating-ui/vue'\nimport {onClickOutside, onKeyStroke, useToNumber} from '@vueuse/core'\nimport {computed, type CSSProperties, inject, nextTick, provide, ref, toRef, watch} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport type {BDropdownProps} from '../../types/ComponentProps'\nimport {BvTriggerableEvent} from '../../utils'\nimport BButton from '../BButton/BButton.vue'\nimport ConditionalWrapper from '../ConditionalWrapper.vue'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\nimport {isBoundary, isRootBoundary} from '../../utils/floatingUi'\nimport {buttonGroupKey, dropdownInjectionKey, inputGroupKey} from '../../utils/keys'\n\nconst _props = withDefaults(defineProps<Omit<BDropdownProps, 'modelValue'>>(), {\n  ariaLabel: undefined,\n  autoClose: true,\n  boundary: 'clippingAncestors',\n  boundaryPadding: undefined,\n  teleportTo: undefined,\n  teleportDisabled: false,\n  disabled: false,\n  floatingMiddleware: undefined,\n  id: undefined,\n  isNav: false,\n  lazy: false,\n  menuClass: undefined,\n  noCaret: false,\n  noFlip: false,\n  noShift: false,\n  noSize: false,\n  offset: 0,\n  role: 'menu',\n  size: 'md',\n  skipWrapper: false,\n  split: false,\n  splitButtonType: 'button',\n  splitClass: undefined,\n  splitDisabled: undefined,\n  splitHref: undefined,\n  splitTo: undefined,\n  placement: 'bottom-start',\n  splitVariant: undefined,\n  strategy: 'absolute',\n  text: undefined,\n  toggleClass: undefined,\n  toggleText: 'Toggle dropdown',\n  variant: 'secondary',\n  wrapperClass: undefined,\n})\nconst props = useDefaults(_props, 'BDropdown')\n\nconst emit = defineEmits<{\n  'click': [event: MouseEvent]\n  'hidden': []\n  'hide': [value: BvTriggerableEvent]\n  'hide-prevented': []\n  'show': [value: BvTriggerableEvent]\n  'show-prevented': []\n  'shown': []\n  'toggle': []\n}>()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'button-content'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: {hide: () => void; show: () => void}) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'toggle-text'?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id, 'dropdown')\n\nconst modelValue = defineModel<Exclude<BDropdownProps['modelValue'], undefined>>({default: false})\n\nconst inInputGroup = inject(inputGroupKey, false)\nconst inButtonGroup = inject(buttonGroupKey, false)\n\nconst computedOffset = computed(() =>\n  typeof props.offset === 'string' || typeof props.offset === 'number' ? props.offset : NaN\n)\nconst offsetToNumber = useToNumber(computedOffset)\n\nconst floating = ref<HTMLElement | null>(null)\nconst button = ref<HTMLElement | null>(null)\nconst splitButton = ref<HTMLElement | null>(null)\nconst wrapper = ref<HTMLElement | null>(null)\n\nconst boundary = computed<Boundary | undefined>(() =>\n  isBoundary(props.boundary) ? props.boundary : undefined\n)\nconst rootBoundary = computed<RootBoundary | undefined>(() =>\n  isRootBoundary(props.boundary) ? props.boundary : undefined\n)\n\nconst referencePlacement = computed(() => (!props.split ? splitButton.value : button.value))\n\nonKeyStroke(\n  'Escape',\n  () => {\n    modelValue.value = !modelValue.value\n  },\n  {target: referencePlacement}\n)\nonKeyStroke(\n  'Escape',\n  () => {\n    modelValue.value = !modelValue.value\n  },\n  {target: floating}\n)\n\nconst keynav = (e: Readonly<Event>, v: number) => {\n  if (floating.value?.contains((e.target as HTMLElement)?.closest('form'))) return\n  if (/input|select|option|textarea|form/i.test((e.target as HTMLElement)?.tagName)) return\n  e.preventDefault()\n  if (!modelValue.value) {\n    open()\n    nextTick(() => keynav(e, v))\n    return\n  }\n  const list = floating.value?.querySelectorAll('.dropdown-item:not(.disabled):not(:disabled)')\n  if (!list) return\n  if (floating.value?.contains(document.activeElement)) {\n    const active = floating.value.querySelector('.dropdown-item:focus')\n    const index = Array.prototype.indexOf.call(list, active) + v\n    if (index >= 0 && index < list?.length) (list[index] as HTMLElement)?.focus()\n  } else {\n    ;(list[v === -1 ? list.length - 1 : 0] as HTMLElement)?.focus()\n  }\n}\n\nonKeyStroke('ArrowUp', (e) => keynav(e, -1), {target: referencePlacement})\nonKeyStroke('ArrowDown', (e) => keynav(e, 1), {target: referencePlacement})\nonKeyStroke('ArrowUp', (e) => keynav(e, -1), {target: floating})\nonKeyStroke('ArrowDown', (e) => keynav(e, 1), {target: floating})\n\nconst sizeStyles = ref<CSSProperties>({})\nconst floatingMiddleware = computed<Middleware[]>(() => {\n  if (props.floatingMiddleware !== undefined) {\n    return props.floatingMiddleware\n  }\n  const localOffset =\n    typeof props.offset === 'string' || typeof props.offset === 'number'\n      ? offsetToNumber.value\n      : props.offset\n  const arr: Middleware[] = [offsetMiddleware(localOffset)]\n  if (props.noFlip === false) {\n    arr.push(\n      flip({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n      })\n    )\n  }\n  if (props.noShift === false) {\n    arr.push(\n      shift({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n      })\n    )\n  }\n  if (props.noSize === false) {\n    arr.push(\n      sizeMiddleware({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n        apply({availableWidth, availableHeight}) {\n          sizeStyles.value = {\n            maxHeight: availableHeight && modelValue.value ? `${availableHeight}px` : undefined,\n            maxWidth: availableWidth && modelValue.value ? `${availableWidth}px` : undefined,\n          }\n        },\n      })\n    )\n  }\n  return arr\n})\nconst {update, floatingStyles} = useFloating(referencePlacement, floating, {\n  placement: () => props.placement,\n  middleware: floatingMiddleware,\n  strategy: toRef(() => props.strategy),\n  whileElementsMounted: autoUpdate,\n})\n\nconst inButtonGroupAttributes = inButtonGroup\n  ? {\n      class: 'btn-group',\n      role: 'group',\n    }\n  : undefined\n\nconst computedClasses = computed(() => [\n  inButtonGroupAttributes?.class,\n  props.wrapperClass,\n  {\n    'btn-group': !props.wrapperClass && props.split,\n    'dropdown': !props.wrapperClass && !props.split,\n    'position-static': props.boundary !== 'clippingAncestors' && !props.isNav,\n  },\n])\n\nconst buttonClasses = computed(() => [\n  props.split ? props.splitClass : props.toggleClass,\n  {\n    'nav-link': props.isNav,\n    'dropdown-toggle': !props.split,\n    'dropdown-toggle-no-caret': props.noCaret && !props.split,\n    'show': props.split ? undefined : modelValue.value,\n  },\n])\n\nconst onButtonClick = () => {\n  toggle()\n}\n\nconst onSplitClick = (event: Readonly<MouseEvent>) => {\n  props.split ? emit('click', event) : onButtonClick()\n}\n\nonClickOutside(\n  floating,\n  () => {\n    if (modelValue.value && (props.autoClose === true || props.autoClose === 'outside')) {\n      toggle()\n    }\n  },\n  {ignore: [button, splitButton]}\n)\nconst onClickInside = () => {\n  if (modelValue.value && (props.autoClose === true || props.autoClose === 'inside')) {\n    toggle()\n  }\n}\n\nconst hide = () => {\n  modelValue.value && toggle()\n}\nconst show = () => {\n  modelValue.value || toggle()\n}\nconst toggle = () => {\n  emit('toggle')\n  const currentModelValue = modelValue.value\n  const e = new BvTriggerableEvent(currentModelValue ? 'hide' : 'show')\n  currentModelValue ? emit('hide', e) : emit('show', e)\n  if (e.defaultPrevented) {\n    currentModelValue ? emit('hide-prevented') : emit('show-prevented')\n    return\n  }\n  modelValue.value = !currentModelValue\n  currentModelValue ? emit('hidden') : emit('shown')\n  wrapper.value?.dispatchEvent?.(new Event('forceHide'))\n}\n\nwatch(modelValue, () => {\n  update()\n})\n\ndefineExpose({\n  hide,\n  show,\n  toggle,\n})\n\nprovide(dropdownInjectionKey, {\n  id: computedId,\n  show,\n  hide,\n  toggle,\n  visible: toRef(() => modelValue.value),\n  isNav: toRef(() => props.isNav),\n})\n</script>\n"],"names":["_props","__props","props","useDefaults","emit","__emit","computedId","useId","id","modelValue","_useModel","inInputGroup","inject","inputGroupKey","inButtonGroup","buttonGroupKey","computedOffset","computed","offset","NaN","offsetToNumber","useToNumber","floating","ref","button","splitButton","wrapper","boundary","isBoundary","rootBoundary","isRootBoundary","referencePlacement","split","value","index$1","onKeyStroke","target","keynav","e","v","_b","contains","_a","closest","test","_c","tagName","preventDefault","nextTick","list","_d","querySelectorAll","_e","document","activeElement","active","querySelector","index","Array","prototype","indexOf","call","length","_f","focus","_g","sizeStyles","floatingMiddleware","localOffset","arr","offsetMiddleware","noFlip","push","flip","padding","boundaryPadding","noShift","shift","noSize","sizeMiddleware","apply","availableWidth","availableHeight","maxHeight","maxWidth","update","floatingStyles","useFloating","placement","middleware","strategy","toRef","whileElementsMounted","autoUpdate","z","inButtonGroupAttributes","class","role","computedClasses","wrapperClass","dropdown","isNav","buttonClasses","splitClass","toggleClass","noCaret","show","onButtonClick","onSplitClick","event","onClickOutside","autoClose","ignore","onClickInside","hide","toggle","currentModelValue","BvTriggerableEvent","defaultPrevented","dispatchEvent","Event","vue","watch","__expose","provide","dropdownInjectionKey","visible"],"mappings":"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"}