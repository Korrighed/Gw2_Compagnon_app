{"version":3,"file":"BPagination.vue_vue_type_script_setup_true_lang-B2Tvdu2E.js","sources":["../src/components/BPagination/BPagination.vue"],"sourcesContent":["<template>\n  <ul\n    class=\"pagination\"\n    :class=\"computedWrapperClasses\"\n    role=\"menubar\"\n    :aria-disabled=\"props.disabled\"\n    :aria-label=\"props.ariaLabel || undefined\"\n    @keydown=\"handleKeyNav\"\n  >\n    <template v-for=\"page in pages\" :key=\"`page-${page.id}`\">\n      <li v-bind=\"page.li\" ref=\"pageElements\">\n        <span\n          v-if=\"page.id === FIRST_ELLIPSIS || page.id === LAST_ELLIPSIS\"\n          v-bind=\"ellipsisProps.span\"\n        >\n          <slot name=\"ellipsis-text\">\n            {{ props.ellipsisText || '...' }}\n          </slot>\n        </span>\n        <component v-bind=\"page.button\" :is=\"page.button.is\" v-else @click=\"page.clickHandler\">\n          <slot\n            :name=\"page.text.name\"\n            :disabled=\"page.text.disabled\"\n            :page=\"page.text.page\"\n            :index=\"page.text.index\"\n            :active=\"page.text.active\"\n            :content=\"page.text.value\"\n          >\n            {{ page.text.value }}\n          </slot>\n        </component>\n      </li>\n    </template>\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\nimport {BvEvent} from '../../utils'\nimport {computed, nextTick, useTemplateRef, watch} from 'vue'\nimport type {BPaginationProps} from '../../types/ComponentProps'\nimport {useAlignment} from '../../composables/useAlignment'\nimport {useToNumber} from '@vueuse/core'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {ClassValue} from '../../types/AnyValuedAttributes'\nimport {CODE_DOWN, CODE_LEFT, CODE_RIGHT, CODE_UP} from '../../utils/constants'\nimport {stopEvent} from '../../utils/event'\nimport {getActiveElement} from '../../utils/dom'\n\n// Threshold of limit size when we start/stop showing ellipsis\nconst ELLIPSIS_THRESHOLD = 3\n\nconst FIRST_BUTTON = -1\nconst PREV_BUTTON = -2\nconst NEXT_BUTTON = -3\nconst LAST_BUTTON = -4\nconst FIRST_ELLIPSIS = -5\nconst LAST_ELLIPSIS = -6\n\n// This is necessary because type inference isn't succeeding for the pages computed\ninterface PageButton {\n  id: number\n  li: Record<string, unknown>\n  button: Record<string, unknown>\n  text: Record<string, unknown>\n  clickHandler: (e: Readonly<MouseEvent>) => void\n}\n\nconst _props = withDefaults(defineProps<Omit<BPaginationProps, 'modelValue'>>(), {\n  align: 'start',\n  ariaControls: undefined,\n  ariaLabel: 'Pagination',\n  disabled: false,\n  ellipsisClass: undefined,\n  ellipsisText: '\\u2026',\n  firstClass: undefined,\n  firstNumber: false,\n  firstText: '\\u00AB',\n  hideEllipsis: false,\n  hideGotoEndButtons: false,\n  labelFirstPage: 'Go to first page',\n  labelLastPage: 'Go to last page',\n  labelNextPage: 'Go to next page',\n  labelPage: 'Go to page',\n  labelPrevPage: 'Go to previous page',\n  lastClass: undefined,\n  lastNumber: false,\n  lastText: '\\u00BB',\n  limit: 5,\n  nextClass: undefined,\n  nextText: '\\u203A',\n  pageClass: undefined,\n  perPage: DEFAULT_PER_PAGE,\n  pills: false,\n  prevClass: undefined,\n  prevText: '\\u2039',\n  size: undefined,\n  totalRows: DEFAULT_TOTAL_ROWS,\n})\nconst props = useDefaults(_props, 'BPagination')\n\nconst emit = defineEmits<{\n  'page-click': [event: BvEvent, pageNumber: number]\n}>()\n\nconst modelValue = defineModel<Exclude<BPaginationProps['modelValue'], undefined>>({default: 1})\n\nconst pageElements = useTemplateRef<HTMLLIElement[]>('pageElements')\n\nconst limitNumber = useToNumber(() => props.limit, {nanToZero: true, method: 'parseInt'})\nconst perPageNumber = useToNumber(() => props.perPage, {nanToZero: true, method: 'parseInt'})\nconst totalRowsNumber = useToNumber(() => props.totalRows, {nanToZero: true, method: 'parseInt'})\nconst modelValueNumber = useToNumber(modelValue, {nanToZero: true, method: 'parseInt'})\n\nconst perPageSanitized = computed(() => Math.max(perPageNumber.value || DEFAULT_PER_PAGE, 1))\nconst totalRowsSanitized = computed(() => Math.max(totalRowsNumber.value || DEFAULT_TOTAL_ROWS, 0))\n// Use Active to on page-item to denote active tab\nconst numberOfPages = computed(() => Math.ceil(totalRowsSanitized.value / perPageSanitized.value))\nconst computedFill = computed(() => props.align === 'fill')\n// This doesn't use the computedFill util because TS cannot infer that it would never be 'fill'\nconst justifyAlign = computed(() => (props.align === 'fill' ? 'start' : props.align))\n\nconst alignment = useAlignment(justifyAlign)\n\nconst isActivePage = (pageNumber: number) => pageNumber === modelValueNumber.value\nconst getTabIndex = (num: number) => (props.disabled ? null : isActivePage(num) ? '0' : '-1')\n\nconst checkDisabled = (num: number) =>\n  props.disabled ||\n  isActivePage(num) ||\n  modelValueNumber.value < 1 ||\n  // Check if the number is out of bounds\n  num < 1 ||\n  num > numberOfPages.value\n\nconst firstDisabled = computed(() => checkDisabled(1))\nconst prevDisabled = computed(() => checkDisabled(modelValueNumber.value - 1))\nconst lastDisabled = computed(() => checkDisabled(numberOfPages.value))\nconst nextDisabled = computed(() => checkDisabled(modelValueNumber.value + 1))\n\nconst getBaseButtonProps = ({\n  page,\n  classVal,\n  dis,\n  slotName,\n  textValue,\n  tabIndex,\n  label,\n  position,\n  isActive,\n  role,\n  hidden,\n  isSmHidden,\n}: {\n  page: number\n  dis: boolean\n  classVal: ClassValue\n  slotName: string\n  textValue?: string\n  tabIndex?: string\n  label?: string\n  position?: number\n  isActive?: boolean\n  role?: string\n  hidden?: boolean\n  isSmHidden?: boolean\n}) => ({\n  li: {\n    'class': [\n      'page-item',\n      {\n        'active': isActive,\n        'disabled': dis,\n        'bv-d-sm-down-none': isSmHidden,\n        'flex-fill': computedFill.value,\n        'd-flex': computedFill.value && !dis,\n      },\n      classVal,\n    ],\n    role,\n    'aria-hidden': hidden,\n  },\n  button: {\n    'is': dis ? 'span' : 'button',\n    'class': ['page-link', 'text-center', {'flex-grow-1': !dis && computedFill.value}],\n    'aria-label': label,\n    'aria-controls': props.ariaControls || undefined,\n    'aria-disabled': dis ? true : undefined,\n    'aria-posinset': position,\n    'aria-setsize': position ? numberOfPages.value : undefined,\n    'role': 'menuitem',\n    'type': dis ? undefined : 'button',\n    'tabindex': dis ? undefined : tabIndex,\n  },\n  text: {\n    name: slotName,\n    active: isActive,\n    value: textValue ?? page,\n    page,\n    disabled: dis,\n    index: page - 1,\n    content: textValue ? undefined : page,\n  },\n  clickHandler: (e: Readonly<MouseEvent>) => pageClick(e, page),\n})\n\nconst getButtonProps = ({\n  page,\n  classVal,\n  dis,\n  slotName,\n  textValue,\n  label,\n}: {\n  page: number\n  dis: boolean\n  classVal: ClassValue\n  slotName: string\n  textValue?: string\n  label: string\n}) => getBaseButtonProps({page, classVal, dis, slotName, textValue, label, tabIndex: '-1'})\n\nconst getPageButtonProps = (page: number, isSmHidden?: boolean) =>\n  getBaseButtonProps({\n    page,\n    dis: props.disabled,\n    classVal: props.pageClass,\n    slotName: 'page',\n    label: props.labelPage ? `${props.labelPage} ${page}` : undefined,\n    tabIndex: getTabIndex(page) ?? undefined,\n    position: page,\n    isActive: isActivePage(page),\n    isSmHidden,\n  })\n\nconst firstButtonProps = computed(() =>\n  getButtonProps({\n    page: 1,\n    dis: firstDisabled.value,\n    classVal: props.firstClass,\n    slotName: 'first-text',\n    textValue: props.firstText,\n    label: props.labelFirstPage,\n  })\n)\nconst prevButtonProps = computed(() =>\n  getButtonProps({\n    page: Math.max(modelValueNumber.value - 1, 1),\n    dis: prevDisabled.value,\n    classVal: props.prevClass,\n    slotName: 'prev-text',\n    textValue: props.prevText,\n    label: props.labelPrevPage,\n  })\n)\nconst nextButtonProps = computed(() =>\n  getButtonProps({\n    page: Math.min(modelValueNumber.value + 1, numberOfPages.value),\n    dis: nextDisabled.value,\n    classVal: props.nextClass,\n    slotName: 'next-text',\n    textValue: props.nextText,\n    label: props.labelNextPage,\n  })\n)\nconst lastButtonProps = computed(() =>\n  getButtonProps({\n    page: numberOfPages.value,\n    dis: lastDisabled.value,\n    classVal: props.lastClass,\n    slotName: 'last-text',\n    textValue: props.lastText,\n    label: props.labelLastPage,\n  })\n)\n\nconst ellipsisProps = computed(() => ({\n  li: {\n    class: [\n      'page-item',\n      'disabled',\n      'text-center',\n      'bv-d-sm-down-none',\n      computedFill.value ? 'flex-fill' : '',\n      props.ellipsisClass,\n    ],\n    role: 'separator',\n  },\n  span: {\n    class: ['page-link'],\n  },\n}))\n\nconst computedWrapperClasses = computed(() => [\n  alignment.value,\n  {\n    [`pagination-${props.size}`]: props.size !== undefined,\n    'b-pagination-pills': props.pills,\n  },\n])\n\nconst pagination = computed(() => ({\n  pageSize: perPageSanitized.value,\n  totalRows: totalRowsNumber.value,\n  numberOfPages: numberOfPages.value,\n}))\n\nconst pageClick = (event: Readonly<MouseEvent>, pageNumber: number) => {\n  if (pageNumber === modelValueNumber.value) return\n\n  const clickEvent = new BvEvent('page-click', {\n    cancelable: true,\n    target: event.target,\n  })\n  emit('page-click', clickEvent, pageNumber)\n\n  if (clickEvent.defaultPrevented) return\n\n  modelValue.value = pageNumber\n\n  //    nextTick(() => {\n  //  if (isVisible(target) && un_element.contains(target)) {\n  //  attemptFocus(target)\n  //} else {\n  //this.focusCurrent()\n  //}\n  // })\n}\n\nconst isDisabled = (el: HTMLButtonElement) => {\n  const isElement = !!(el && el.nodeType === Node.ELEMENT_NODE)\n  const hasAttr = isElement ? el.hasAttribute('disabled') : null\n  const hasClass = isElement && el.classList ? el.classList.contains('disabled') : false\n\n  return !isElement || el.disabled || hasAttr || hasClass\n}\n\nconst getButtons = () =>\n  pageElements.value\n    ?.map((page) => page.children[0] as HTMLButtonElement)\n    .filter((btn) => {\n      if (btn.getAttribute('display') === 'none') {\n        return false\n      }\n\n      const bcr = btn.getBoundingClientRect()\n\n      return !!(bcr && bcr.height > 0 && bcr.width > 0)\n    }) ?? []\n\nconst focusFirst = () => {\n  nextTick(() => {\n    const btn = getButtons().find((el) => !isDisabled(el))\n    btn?.focus()\n  })\n}\n\nconst focusPrev = () => {\n  nextTick(() => {\n    const buttons = getButtons()\n    const index = buttons.indexOf(getActiveElement() as HTMLButtonElement)\n\n    if (index > 0 && !isDisabled(buttons[index - 1])) {\n      buttons[index - 1]?.focus()\n    }\n  })\n}\n\nconst focusLast = () => {\n  nextTick(() => {\n    const btn = getButtons()\n      .reverse()\n      .find((el) => !isDisabled(el))\n    btn?.focus()\n  })\n}\n\nconst focusNext = () => {\n  nextTick(() => {\n    const buttons = getButtons()\n    const index = buttons.indexOf(getActiveElement() as HTMLButtonElement)\n\n    if (index < buttons.length - 1 && !isDisabled(buttons[index + 1])) {\n      buttons[index + 1]?.focus()\n    }\n  })\n}\n\nconst handleKeyNav = (event: KeyboardEvent) => {\n  const {code, shiftKey} = event\n\n  if (code === CODE_LEFT || code === CODE_UP) {\n    stopEvent(event)\n    shiftKey ? focusFirst() : focusPrev()\n  } else if (code === CODE_RIGHT || code === CODE_DOWN) {\n    stopEvent(event)\n    shiftKey ? focusLast() : focusNext()\n  }\n}\n\nwatch(modelValueNumber, (newValue) => {\n  const sanitizeCurrentPage = (value: number, numberOfPages: number) => {\n    const page = value || 1\n    return page > numberOfPages ? numberOfPages : page < 1 ? 1 : page\n  }\n  const calculatedValue = sanitizeCurrentPage(newValue, numberOfPages.value)\n  if (calculatedValue === modelValue.value) return\n  modelValue.value = calculatedValue\n})\n\nwatch(pagination, (oldValue, newValue) => {\n  if (newValue.pageSize !== oldValue.pageSize && newValue.totalRows === oldValue.totalRows) {\n    // If the page size changes, reset to page 1\n    modelValue.value = 1\n  } else if (\n    newValue.numberOfPages !== oldValue.numberOfPages &&\n    modelValueNumber.value > newValue.numberOfPages\n  ) {\n    // If `numberOfPages` changes and is less than\n    // the `currentPage` number, reset to page 1\n    modelValue.value = 1\n  }\n})\n\nconst hideFirstButton = computed(() => (props.hideGotoEndButtons && !props.firstNumber ? 1 : 0))\nconst hideLastButton = computed(() => (props.hideGotoEndButtons && !props.lastNumber ? 1 : 0))\nconst showFirstButton = computed(() => (hideFirstButton.value ? 0 : 1))\nconst showLastButton = computed(() => (hideLastButton.value ? 0 : 1))\nconst firstPage = computed(() => (props.firstNumber ? 1 : 0))\nconst lastPage = computed(() => (props.lastNumber ? 1 : 0))\nconst halfLimit = computed(() => Math.floor(limitNumber.value / 2))\n\nconst pages = computed(() => {\n  const {value} = modelValueNumber\n\n  const els = elements.value.map((p) => {\n    switch (p) {\n      case FIRST_BUTTON:\n        return {id: p, ...firstButtonProps.value}\n      case PREV_BUTTON:\n        return {id: p, ...prevButtonProps.value}\n      case NEXT_BUTTON:\n        return {id: p, ...nextButtonProps.value}\n      case LAST_BUTTON:\n        return {id: p, ...lastButtonProps.value}\n      case FIRST_ELLIPSIS:\n      case LAST_ELLIPSIS:\n        return {id: p, ...ellipsisProps.value}\n      default:\n        return {id: p, ...getPageButtonProps(p)}\n    }\n  })\n\n  if (numberOfPages.value > 3) {\n    if (value > numberOfPages.value - halfLimit.value - lastPage.value) {\n      const idx = 2 + showFirstButton.value\n      els[idx] = {id: els[idx].id, ...getPageButtonProps(els[idx].id, true)}\n    }\n\n    if (value <= halfLimit.value + firstPage.value) {\n      const idx = els.length - (3 + showLastButton.value)\n      els[idx] = {id: els[idx].id, ...getPageButtonProps(els[idx].id, true)}\n    }\n  }\n\n  return els as PageButton[]\n})\n\nconst elements = computed(() => {\n  // The idea here is to create an array of all the buttons on the page control.\n  // This way we can keep the invariants in one place and the template code just\n  // iterates over the array.\n\n  const pages = numberOfPages.value\n  const {value} = modelValueNumber\n  const limit = limitNumber.value\n  const hideEllipsis = props.hideEllipsis || limit <= ELLIPSIS_THRESHOLD\n\n  // The first case is when all of the page buttons fit on the control, this is\n  //  the simplest case and the only one that will create an array smaller than\n  //  Limit + 4 - hideEndButtons * 2 (the [first, last,] prev, next buttons)\n\n  if (pages < limit + firstPage.value + lastPage.value) {\n    return [\n      !firstPage.value && !hideFirstButton.value ? FIRST_BUTTON : null,\n      PREV_BUTTON,\n      ...Array.from({length: pages}, (_, index) => index + 1),\n      NEXT_BUTTON,\n      !lastPage.value && !hideLastButton.value ? LAST_BUTTON : null,\n    ].filter((x) => x !== null) as number[]\n  }\n\n  // All of the remaining cases result in an array that is exactly limit + 4 - hideEndButtons * 2 in length, so create\n  //  the array upfront and set up the beginning and end buttons, then fill the rest for each case\n\n  const buttons = Array.from({length: limit + 4 - (hideFirstButton.value + hideLastButton.value)})\n  if (!hideFirstButton.value) {\n    if (!firstPage.value) {\n      buttons[0] = FIRST_BUTTON\n      buttons[1] = PREV_BUTTON\n    } else {\n      buttons[0] = PREV_BUTTON\n      buttons[1] = 1\n    }\n  } else {\n    buttons[0] = PREV_BUTTON\n  }\n\n  if (!hideLastButton.value) {\n    if (!lastPage.value) {\n      buttons[buttons.length - 1] = LAST_BUTTON\n      buttons[buttons.length - 2] = NEXT_BUTTON\n    } else {\n      buttons[buttons.length - 1] = NEXT_BUTTON\n      buttons[buttons.length - 2] = pages\n    }\n  } else {\n    buttons[buttons.length - 1] = NEXT_BUTTON\n  }\n\n  // The next case is where the page buttons start at the begginning, with\n  //  no ellipsis at the beginning, but one at the end\n\n  if (value <= halfLimit.value + firstPage.value) {\n    for (let index = 1; index <= limit; index++) {\n      buttons[index + 1 - hideFirstButton.value] = index + firstPage.value\n    }\n\n    if (!hideEllipsis) {\n      buttons[buttons.length - (2 + showLastButton.value)] = LAST_ELLIPSIS\n    }\n  }\n\n  // And then we have the case where the page buttons go up to the end, with no\n  //  ellipsis at the end, but one at the beginning\n\n  if (value > pages - halfLimit.value - lastPage.value) {\n    const start = pages - (limit - 1) - lastPage.value\n    for (let index = 0; index < limit; index++) {\n      buttons[index + 2 - hideFirstButton.value] = start + index\n    }\n\n    if (!hideEllipsis) {\n      buttons[1 + showFirstButton.value] = FIRST_ELLIPSIS\n    }\n  }\n\n  // Finally we have the case where we have ellipsis at both ends\n  if (!buttons[2]) {\n    // Is there a more elegant way to ceck that we're in the final case?\n    const start = value - Math.floor(limit / 2)\n    for (let index = 0; index < limit; index++) {\n      buttons[index + 2 - hideFirstButton.value] = start + index\n    }\n\n    if (!hideEllipsis) {\n      buttons[1 + showFirstButton.value] = FIRST_ELLIPSIS\n      buttons[buttons.length - (2 + showLastButton.value)] = LAST_ELLIPSIS\n    }\n  }\n\n  //Enable sanity check for debugging purposes\n  // for (let i = 0; i < buttons.length; i++) {\n  //   if (!buttons[i]) {\n  //     // eslint-disable-next-line no-console\n  //     console.log(\n  //       `Failed: button == ${i}, limit=${limit}, pages=${pages}, firstPage=${firstPage}, lastPage=${lastPage}, value=${value}`\n  //     )\n  //   }\n  // }\n\n  return buttons.filter((x) => x !== null) as number[]\n})\n</script>\n\n<script lang=\"ts\">\nconst DEFAULT_PER_PAGE = 20\nconst DEFAULT_TOTAL_ROWS = 0\n</script>\n"],"names":["PREV_BUTTON","NEXT_BUTTON","_props","__props","props","useDefaults","emit","__emit","modelValue","_useModel","pageElements","useTemplateRef","limitNumber","useToNumber","limit","nanToZero","method","perPageNumber","perPage","totalRowsNumber","totalRows","modelValueNumber","perPageSanitized","computed","Math","max","value","totalRowsSanitized","numberOfPages","ceil","computedFill","align","justifyAlign","alignment","useAlignment","isActivePage","pageNumber","checkDisabled","num","disabled","firstDisabled","prevDisabled","lastDisabled","nextDisabled","getBaseButtonProps","page","classVal","dis","slotName","textValue","tabIndex","label","position","isActive","role","hidden","isSmHidden","li","class","active","button","is","ariaControls","type","tabindex","text","name","index","content","clickHandler","e","pageClick","getButtonProps","getPageButtonProps","pageClass","labelPage","firstButtonProps","firstClass","firstText","labelFirstPage","prevButtonProps","prevClass","prevText","labelPrevPage","nextButtonProps","min","nextClass","nextText","labelNextPage","lastButtonProps","lastClass","lastText","labelLastPage","ellipsisProps","ellipsisClass","span","computedWrapperClasses","size","pills","pagination","pageSize","event","clickEvent","BvEvent","cancelable","target","defaultPrevented","isDisabled","el","isElement","nodeType","Node","ELEMENT_NODE","hasAttr","hasAttribute","hasClass","classList","contains","getButtons","_a","map","children","filter","btn","getAttribute","bcr","getBoundingClientRect","height","width","handleKeyNav","code","shiftKey","CODE_LEFT","CODE_UP","stopEvent","nextTick","find","focus","buttons","indexOf","getActiveElement","CODE_RIGHT","CODE_DOWN","reverse","length","newValue","calculatedValue","sanitizeCurrentPage","watch","oldValue","hideFirstButton","hideGotoEndButtons","firstNumber","hideLastButton","lastNumber","showFirstButton","showLastButton","firstPage","lastPage","halfLimit","floor","pages","els","elements","p","id","idx","hideEllipsis","Array","from","_","x","start"],"mappings":"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"}